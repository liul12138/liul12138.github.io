{"pages":[{"title":"","text":"唐艺昕 李沁 李一桐 gakki 图片搜集于互联网，侵权请留言，马上处理😊。","link":"/album/index.html"},{"title":"","text":"来而不往非礼也畅所欲言，有留必应","link":"/message/index.html"},{"title":"","text":"&nbsp;&nbsp;听听音乐 音乐播放器由mePlayer提供，布局参照网友博客所作，感谢作者的辛勤付出。更多音乐分享请查看歌单。 &nbsp;&nbsp;看看视频 ->点击以下条目开始播放视频,向下滑动查看更多","link":"/media/index.html"},{"title":"","text":"碎碎念 tips：github登录后按时间正序查看、可点赞加❤️、本插件地址..「+99次查看」 var gitalk = new Gitalk({ clientID: '101dfba7cff3d5f55d0a', clientSecret: '9e52fecc777117fa6ade0a02fa591a068c3ce598', id: '666666', repo: 'issue_database', owner: 'liul12138', admin: \"liul12138\", createIssueManually: true, distractionFreeMode: false }) gitalk.render('comment-container1')","link":"/self-talking/index.html"},{"title":"音乐歌单收藏","text":"--- 温馨提示：选择喜欢的音乐双击播放，由于版权原因部分不能播放。如果喜欢歌单收藏一下，去网易云都能播放哟！","link":"/music/index.html"}],"posts":[{"title":"my_blog","text":"","link":"/2020/04/29/my-blog/"},{"title":"JavaScript中的高阶函数","text":"对象与数组 数组 _js数组与C语言数组有着显著的不同,c语言的数组是预先分配好了空间,而js则更类似一个元祖,弱语言类型决定了其不需要指定变量类型,实现任意存放,任意读取_ 高阶函数 foreach()end123456789101112131415161718192021222324252627282930313233343536373839404142434445464748var exe=new Array('chinese','math','pe','physics');console.log(table[8][7]);console.log(exe.join('-'),exe.reverse(),exe.sort(),)exe.push('english')exe.forEach( function(value){ end+=value; return value; })console.log(end)``` + ## map()``` var obj={ };exe.map( function(value,index) { obj[index]=value; return obj; })console.log(obj);``` + ## filter()``` console.log(obj);console.log(exe.filter( function(value){return value.length&lt;3;}))``` + ## reduce()``` exe3=exe.reduce(function(x,y){ return x+y;})console.log(exe3)``` __类数组对象具有数组的性质,可在对象添加一个length属性值添加显著长度的性质__ ___函数中不指定形参名称,直接通过argument[]数组传入实参___``` function add(` `){ return arguments[0]+arguments[1]; console.log(arguments.length)}console.log(a=add(1,2))","link":"/2020/04/30/JavaScript%E4%B8%AD%E7%9A%84%E9%AB%98%E9%98%B6%E5%87%BD%E6%95%B0/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2020/04/29/hello-world/"},{"title":"django学习(1)-简介","text":"dajngo介绍 Django，发音为[`dʒæŋɡəʊ]，是用python语言写的开源web开发框架，并遵循MVC设计。劳伦斯出版集团为了开发以新闻内容为主的网站，而开发出来了这个框架，于2005年7月在BSD许可证下发布。这个名称来源于比利时的爵士音乐家DjangoReinhardt，他是一个吉普赛人，主要以演奏吉它为主，还演奏过小提琴等。由于Django在近年来的迅速发展，应用越来越广泛，被著名IT开发杂志SDTimes评选为2013SDTimes100，位列”API、库和框架”分类第6位，被认为是该领域的佼佼者。Django的主要目的是简便、快速的开发数据库驱动的网站。它强调代码复用，多个组件可以很方便的以”插件”形式服务于整个框架，Django有许多功能强大的第三方插件，你甚至可以很方便的开发出自己的工具包。这使得Django具有很强的可扩展性。它还强调快速开发和DRY(DoNotRepeatYourself)原则。 mvc模式 MVC的全拼为Model-View-Controller，最早由TrygveReenskaug在1978年提出，是施乐帕罗奥多研究中心(Xerox PARC)在20世纪80年代为程序语言Smalltalk发明的一种软件设计模式，是为了将传统的输入（input）、处理（processing）、输出（output）任务运用到图形化用户交互模型中而设计的。随着标准输入输出设备的出现，开发人员只需要将精力集中在业务逻辑的分析与实现上。后来被推荐为Oracle旗下Sun公司Java EE平台的设计模式，并且受到越来越多的使用ColdFusion和PHP的开发者的欢迎。现在虽然不再使用原来的分工方式，但是这种分工的思想被沿用下来，广泛应用于软件工程中，是一种典型并且应用广泛的软件架构模式。后来，MVC的思想被应用在了Ｗeb开发方面，被称为Ｗeb MVC框架。MVC框架的核心思想是：解耦，让不同的代码块之间降低耦合，增强代码的可扩展性和可移植性，实现向后兼容。 djangomvt模式 M全拼为Model，与MVC中的M功能相同，负责和数据库交互，进行数据处理。 V全拼为View，与MVC中的C功能相同，接收请求，进行业务处理，返回应答。 T全拼为Template，与MVC中的V功能相同，负责封装构造要返回的html。","link":"/2020/04/30/django%E5%AD%A6%E4%B9%A0-1-%E7%AE%80%E4%BB%8B/"},{"title":"django学习(2)-模型module","text":"model是django框架中负责与数据库中进行交互的一部分,在学习的过程中我主要以重构个人blog为驱动 Django模型类Django根据属性的类型确定以下信息: 当前选择的数据库支持字段的类型 渲染管理表单时使用的默认html控件 在管理站点最低限度的验证django会为表创建自动增长的主键列，每个模型只能有一个主键列，如果使用选项设置某属性为主键列后django不会再创建自动增长的主键列。默认创建的主键列属性为id，可以使用pk代替，pk全拼为primary key。 字段类型 引入Django.db.models包 AutoField：自动增长的IntegerField，通常不用指定，不指定时Django会自动创建属性名为id的自动增长属性。 BooleanField textField：大文本字段，一般超过4000个字符时使用。 IntegerField：整数。 CharField(max_length=字符长度)：字符串。 DecimalField(max_digits=None, decimal_places=None)：十进制浮点数。 参数max_digits表示总位数。 参数decimal_places表示小数位数。 FloatField：浮点数 DateField[auto_now=False, auto_now_add=False])：日期。 参数auto_now表示每次保存对象时，自动设置该字段为当前时间，用于”最后一次修改”的时间戳，它总是使用当前日期，默认为false。 参数auto_now_add表示当对象第一次被创建时自动设置当前时间，用于创建的时间戳，它总是使用当前日期，默认为false。 TimeField,DateTimeField,FileField,ImageField 选项 ![](https://cdn.jsdelivr.net/gh/chch455/tuchuang/2020/05/01/746471ab9c0ae172a3f1efc25540741a.png)以我个人博客为例给博客定义了文章,标签,目录三个模型类 注意的点有几个 在关联类中,所涉及的四个类型,均在文章定义类中有出现 ForeignKey：一对多，将字段定义在多的一端中。 ManyToManyField：多对多，将字段定义在任意一端中。 OneToOneField：一对一，将字段定义在任意一端中。 可以维护递归的关联关系，使用’self’指定，详见”自关联”。 12345678910111213141516171819202122232425262728293031323334353637383940414243from django.db import models# Create your models here.class ArticleInfo(models.Model): ArticleTittle=models.CharField(max_length=20) ArticleAuthor=models.CharField(max_length=10) ArticleContent=models.DateTimeField(auto_now_add=True) ArticleComment=models.CharField(max_length=20) ArticleCount=models.IntegerField() isDelete=models.BooleanField(default=False) ArticleTag=models.ManyToManyField('Tag',on_delete=models.CASCADE) ArticlePic=models.CharField(max_length=70) ArticleCategory=models.ForeignKey('Category', on_delete=models.CASCADE) ArticleParent=models.ForeignKey('self', null=True, blank=True , on_delete=models.CASCADE) class Meta: &quot;&quot;&quot;定义元类&quot;&quot;&quot; verbose_name='文章' #文章tag类 verbose_name_plural=verbose_name #复数形式 def __str__(self): return self.ArticleTittleclass Tag(models.Model): #定义标签类,为每篇文章添加tag TagName=models.CharField(max_length=10) class Meta: verbose_name = '标签' verbose_name_plural = verbose_name def __str__(self): return self.TagNameclass Category(models.Model): CategoryName = models.CharField(max_length=20) class Meta: verbose_name = '分类' verbose_name_plural = verbose_name def __str__(self): return self.CategoryName 注意点2:在最新的版本中出现,必须要为关联函数添加on_delete项参数,这一点详见on_delete的详细说明 注意点3:更改默认数据库为mysql的步骤 安装MySQL,熟悉其基本操作 安装pymysql,更新model12pip install pymysqlpip upgrade install --upgrade mysqlclient setting.py中做database配置12345678910DATABASES = {'default': { 'ENGINE': 'django.db.backends.mysql', 'NAME': 'blog_v1',#数据库名称 'USER':'root',#user name 'PASSWORD': 'vae20000608', #数据库登录密码 'HOST': 'localhost', #数据库所在主机 'PORT': '3306', #数据库端口}} 在项目应用目录下添加12import pymysqlpymysql.install_as_MySQLdb() 在执行完上述配置后,进行模型迁移12python manage.py makemigrationpython manage.py migrate 在MySQL中查询发现完成迁移 查询一下数据发现操作成功","link":"/2020/05/01/django%E5%AD%A6%E4%B9%A0-2-%E6%A8%A1%E5%9E%8Bmodel/"}],"tags":[{"name":"javascript","slug":"javascript","link":"/tags/javascript/"},{"name":"python","slug":"python","link":"/tags/python/"},{"name":"django","slug":"django","link":"/tags/django/"}],"categories":[{"name":"前端","slug":"前端","link":"/categories/%E5%89%8D%E7%AB%AF/"},{"name":"python","slug":"python","link":"/categories/python/"}]}